给定一个包含红色、白色和蓝色，一共 n 个元素的数组，原地对它们进行排序，
使得相同颜色的元素相邻，并按照红色、白色、蓝色顺序排列。
此题中，我们使用整数 0、 1 和 2 分别表示红色、白色和蓝色。
注意:
不能使用代码库中的排序函数来解决这道题。
示例:
输入: [2,0,2,1,1,0]
输出: [0,0,1,1,2,2]

来源：力扣（LeetCode）
链接：https://leetcode-cn.com/problems/sort-colors
著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。
解题思路为：设置p0，p2,和cur；cur和p0从表头开始走，p2从尾开始；

遍历数组停止条件为cur<=p2;
若cur遇到数字0，则与p0交换，p0++，cur++；
若cur遇到数字2，则与p2交换，p2--，cur不变，（还要判断交换前的p2为哪个数字）；
若cur遇到数字1，则cur++；这样数组会按顺序排列好
class Solution {
    public void sortColors(int[] nums) {
        int cur = 0;
        int p0 = 0,p2 = nums.length-1;
        int tmp = 0;
        while(cur <= p2){
            if(nums[cur] == 2){
                tmp = nums[cur];
                nums[cur] = nums[p2];
                nums[p2--] = tmp;
            }else if(nums[cur] == 0){
                tmp = nums[cur];
                nums[cur++] = nums[p0];
                nums[p0++] = tmp; 
            }else{
                cur++;           
            }
        }
    }
}