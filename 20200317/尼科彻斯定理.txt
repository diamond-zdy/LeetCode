链接：https://www.nowcoder.com/questionTerminal/dbace3a5b3c4480e86ee3277f3fe1e85?f=discussion
来源：牛客网

验证尼科彻斯定理，即：任何一个整数m的立方都可以写成m个连续奇数之和。

例如：

1^3=1 

2^3=3+5 

3^3=7+9+11 

4^3=13+15+17+19 

接口说明

原型：

 /*
 功能: 验证尼科彻斯定理，即：任何一个整数m的立方都可以写成m个连续奇数之和。
 原型：
     int GetSequeOddNum(int m,char * pcSequeOddNum);
 输入参数：
     int m：整数(取值范围：1～100)
    
 返回值：
     m个连续奇数(格式：“7+9+11”);
 */

 public String GetSequeOddNum(int m)
 {
     /*在这里实现功能*/

     return null;
 }

输入描述:
输入一个int整数

输出描述:
输出分解后的string

示例1
输入
6
输出
31+33+35+37+39+41


import java.util.*;
public class Main{
    public static void main(String[] args){
        Scanner sc = new Scanner(System.in);
        while(sc.hasNext()){
            int m = sc.nextInt();
            String str = GetSequeOddNum(m);
            System.out.println(str.toString());
        }
    }
    public static String GetSequeOddNum(int m){
        int num = m*(m-1) + 1;
        StringBuffer sb = new StringBuffer();
        for(int i = 0;i < m;i++){
            if(i == m-1){
                sb.append(num);
            }else{
                sb.append(num + "+");
            }
            num += 2;
        }
        return sb.toString();
    }
}